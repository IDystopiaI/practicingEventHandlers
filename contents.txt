1. Website
    - Basic example using selectors to modify the DOM with selectors

2. Variables
    - printing strings, template literals, typeof keyword

3. Arithmetic
    - math
    - off topic dive into structuredClone

4. Accept User Input
    1. through an alert containing an input field
    2. collecting from a field after the user clicks a button

5. Type Conversion
    - Changing the datatype of one value to another
        - strings, numbers, booleans

6. Constants
    - ties back into structuredClone; an object is mutable
    - creates immutable variables

7. Counter Program
    - a program that responds to incrementing/decrementing/resting a counter in response to what a user clicks on

8. Math
    - Math is an object in JavaScript
    - Many static methods live inside this object such as Math.floor()

9. Random
    - Working with Random in JavaScript

10. If Statements
    - Conditionals, some ternary

11. Checked Property
    - Determines the checked state of an HTML checkbox or radio button element
    - The .checked property is sued for both radio and checkboxes

12. Ternary operator
    - Alternative way of writing if statements
    - an example can be found in conditionals

13. Switches
    - very similar to if else statements, does not short-circuit (unlike other languages)
    - best to add break after each clause to prevent fallthrough

14. String methods
    - methods to manipulate and work with text
    - remember that strings are immutable in JS

15. String slicing
    - part of String methods

16. Method chaining
    - calling several methods one after another in one continuous line of code
    - not sure if "first class citizen" applies here or if that's more specific to functions

17. Logical operators
    - && || !

18. Strict equality
    - together with Logical operators
    - small bit of bitwise ~~

19. While loops
    - while loop = repeat some code while some condition is true

20. For loops
    - very short for loops lesson

21. Number guessing game
    - guessing is an attempt
    - guessing2 is an event driven revision
    - guessing3 makes use of prompts to pause a while loop

22. Functions
    - a section of reusable code.
    - Declare code once, use it wherever you want.
    - call the function to execute the code.

23. Variable scope
    - where a variable can be access from local/global

24. Temperature conversion program
    - Temperature conversion program making use of html, css and js

25. Arrays
    - some array methods

26. Spread operator
    - ... to unpack iterables

27. Rest parameters
    - ...arg to pack objects into an array

28. Dice Roller program
    - making an html dice roller app

29. Random password generator
    - create a character set and generate a password of n-length from the allowed characters

30. Callbacks
    - A function that is passed as an argument to another function
    - Used to handle asynchronous operations

31. forEach()
    - a method for iterables, takes a callback function and executes it an all instances of the iterable
    - non-mutating and returns undefined; reassignment will change the values of an iterable

* JavaScript/functions/iterableFuncs for filter, map and reduce
32. map()
    - similar to forEach, returns a new array

33. filter()
    - if callback returns true, element is appended to an array

34. reduce()
    - continues to invoke callback function until no elements remain in array

35. Function expressions
    - let hello = function(){} anonymous

36. Arrow functions
    - () => {} function expression with less syntax

37. JavaScript Object
    - Objects, key: value, methods

38. What is THIS
    - reference to an instance of a class

39. Constructors
    - used to instantiate an object

40. Classes
    - a template for an object

41. STATIC keyword
    - A class owned property or method

42. Inheritance
    - OOP, a child inherits from a parent

43. SUPER keyword
    - access a parent constructor
    - access a parent method

44. Getters & Setters
    - access modifiers
    - validate input data

45. Destructuring
    - extracting values from arrays and objects
    - [] to destructure arrays
    - {} to destructure objects

46. Nested objects
    - An object within another object
    - allows you to represent more complex data structures
    - Child Object is enclosed by a parent object
    Person{Address{}, ContactInfo{}}
    ShoppingCart{Keyboard{}, Mouse{}, Monitor{}}

47. Arrays of objects
    - performing various actions on an array such as reduce

48. Sorting
    - method to sort array elements in lexicographical order
    - (alphabet + numbers + symbols)

49. Shuffle an array
    - using fisher yates to shuffle an array in place
    - can also shuffle into a new array, which might
    be easier to understand (remove selected element, update
    upperBound for selecting next element)

50. Dates
    - some info on date times

51. Closures
    - useful for limiting the scope of variables
    - return an instance of a loop

52. setTimeout()
    - explanation on setTimeout, clearTimeout, setInterval
    - and incorporating callback functions

53. Digital Clock program
    - a clock displaying the current time HH:MM:SS

54. Stopwatch program
    - browser based Stopwatch, uses js to update display

55. ES6 Modules
    - reusable code that is stored in an external file
    - can contain variables, classes, functions, etc.

56. Asynchronous code
    - some code will run before previous code has finished executing
      this is asynchronous

57. Error handling
    - try, catch, finally
    - throw new Error("This is an error message")

58. Calculator program
    - a Calculator written in JavaScript
    - some regex thrown in for practice

59. What is the DOM?
    - Document Object Model
    - tree structure, use dot notation to navigate
    - console.dir(Document) to view contents and properties

60. Element selectors
    - element and query selectors

61. DOM navigation
    - .firstElementChild
    - .lastElementChild
    - .nextElementSibling
    - .preventElementSibling
    - .parentElement
    - .children

62. Add & change HTML
    - target.append(newElement)/target.prepend(newElement) nest within target element at end or beginning
    - document.body.insertBefore(newElement, existingElement); insert at same level as target element

63. Mouse events
    - .addEventListener("click", _event)
    - click, mouseover, mouseout

64. Key events
    - .addEventListener("keydown", _event)
    - console.log("event.key")
    - event.preventDefault()
    - keydown, keyup
    - event.key/event.code

65. Hide/show HTML
    - use visibility: hidden/visible to toggle elements
    without displacing other elements

66. NodeLists
    - static collection of elements

67. classList
    - interacting with an element's list of CSS classes
    - methods: add(), remove(), toggle(remove, add), replace(old, new), contains()
    - more NodeList practice

68. Rock Paper Scissors
    - rock paper scissors, reacts to element being clicked

69. Image Slider
    - changing between a set of images
    - pagination

70. Callback Hell?
    - Situation where callbacks are nested within other callbacks
      leading to code being hard to read

    - Make use of Promises + async/await to avoid
      callback hell

71. Promises
    - turn asynchronous into synchronous
    - returns resolved or reject

72. Async/Await
    - async returns Promises
    - await waits for previous function to finish

73. JSON files
    - file structure and loading a file in js using fetch('../path/to/file.json')
    - JSON.stringify(JSONObject) -> string representation
    - JSON.parse("{"name":"Spongebob"}) -> JSON object

    - * need to fix parsing of files/json/person.json, doesn't seem to be parsing correctly

74. Fetch data from an API
    - Using https://pokeapi.co/ to retrieve a pokemon's sprite
    - more work with JSON, fetch, async/await

75. Weather App project
    - create a weather app
    - more API practice
    - Async/Await
